<%- include("partials/header") -%>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400..900;1,400..900&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<style>
	.color{
		color: #176fa5;
	}
	.form-control:focus {
    border: none;
    box-shadow: none;
}
</style>
<section class="login">
	<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
	<div class="container-log">
		<!-- Dark mode toggle switch with custom sun and moon icons -->
		<div class="toggle-container">
			<label class="switch">
				<input type="checkbox" id="modeToggle">
				<span class="slider round">
					<img src="/image/light.png" class="sun slider-icon" alt="light mode" width="30" height="30"/>
					<img src="/image/dark.png" class="moon slider-icon" alt="light mode" width="30" height="30"/>
				</span>
			</label>
		</div>
		<img class="auth-bg w-half img-fluid" src="/image/login.jpg" alt="login" />

		<div class="row mt-3 w-half">
			<h1 class="offset-5 mb-3 text-3xl playfair-display-heading pl-4">Signup</h1>
			<div class="col-7 offset-3">
				<% if (errorMessage) { %>
				<p style="color: red"><%= errorMessage %></p>
				<% } %>
				<form method="post" action="/user/register" id="signupForm">
					<div class="regclass mb-3">
						<i class='logo1 bx bx-user color' style="font-size:25px"></i>
						<label class="form-label" for="name">Name</label>
						<input
							type="text"
							class="form-control"
							id="name"
							placeholder="User"
							name="name"
							required
							pattern="[A-Za-z]+"
							style="padding-left:10%;"
							title="Must container letters only.Numbers and Special characters not allowed"
						/>
					</div>
					<div class="regclass mb-3">
						<i class='logo2 bx bx-envelope color' style="font-size:25px;"></i>
						<label class="form-label" for="email">Email ID</label>
						<input
							type="email"
							class="form-control"
							id="email"
							placeholder="abc1@site.com"
							name="email"
							style="padding-left:10%;"
							required
						/>
					</div>
					<div class="regclass mb-3">
						<div class="regclass">
						<i class='logo3 bx bx-lock-alt color' style="font-size:27px;"></i>
						<label class="form-label" for="password">Password</label>
						<input
							type="password"
							class="form-control"
							id="password"
							placeholder="••••••"
							name="password"
							style="padding-left:10%;"
							required
							aria-describedby="passwordHelpBlock"
						/>
						</div>
						<span class="password-toggle" id="passwordToggle">
							<i class="fas fa-eye-slash"></i>
						</span>
						<div id="passwordHelpBlock" class="form-text">
							Your password must be 8-20 characters long.
						</div>
					</div>

					<button type="submit" class="btn btn-dark login-button mb-3 center">
						Create Account
					</button>
				</form>
				<div class="mx-auto">Already have an account?
					<a href="/user/login" class="fw-bold color">Login</a>
				</div>
			</div>
		</div>
	</div>
</section>

<%- include("partials/footer") -%>

<script>
	const passwordInput = document.getElementById('password');
	const passwordToggle = document.getElementById('passwordToggle');
	const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
	const signupForm = document.getElementById('signupForm');

	function validateEmail() {
		const emailInput = document.getElementById('email').value;
		return emailPattern.test(emailInput);
	}

	function checkEmail() {
		const email = document.getElementById('email').value;
		return fetch(`https://disposable.debounce.io/?email=${email}`)
			.then(response => response.json())
			.then(data => {
				if (data.disposable === "true") {
					alert("Disposable email");
					return false;
				} else {
					return true;
				}
			})
			.catch(error => {
				console.error('Error:', error);
				alert("An error occurred while checking the email.");
				return false;
			});
	}

	signupForm.addEventListener('submit', async function (e) {
		e.preventDefault();
		if (!validateEmail()) {
			alert('Please enter a valid email address (e.g., user@example.com)');
			return;
		}
		const isGenuine = await checkEmail();
		if (isGenuine) {
			signupForm.submit();
		}
	});

	passwordToggle.addEventListener('click', function () {
		const passwordField = this.querySelector('i');
		const fieldType = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
		passwordInput.setAttribute('type', fieldType);

		if (fieldType === 'password') {
			passwordField.classList.replace('fa-eye', 'fa-eye-slash');
		} else {
			passwordField.classList.replace('fa-eye-slash', 'fa-eye');
		}
	});
</script>
